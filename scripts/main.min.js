/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var stationBtn = document.getElementById('stationBtn');
	var station = document.getElementById('station');
	var researchLabBtn = document.getElementById('researchLabBtn');
	var researchLab = document.getElementById('research-lab');
	var playerPwr = document.getElementById('playerPwr');
	var playerMaxPwr = document.getElementById('playerMaxPwr');
	
	var player = {
	  pwr: 100,
	  maxPwr: 100,
	  location: 'station'
	};
	
	function allHidden() {
	  station.classList.add('hidden');
	  researchLab.classList.add('hidden');
	}
	
	function travel(destination) {
	  if (player.location != destination && player.pwr >= 5) {
	    player.location = destination;
	    player.pwr -= 5;
	    allHidden();
	    if (playerPwr.innerHTML != player.pwr) playerPwr.innerHTML = player.pwr;
	  }
	}
	
	stationBtn.addEventListener('click', function () {
	  travel('station');
	  station.classList.remove('hidden');
	});
	
	researchLabBtn.addEventListener('click', function () {
	  travel('researchLab');
	  researchLab.classList.remove('hidden');
	});
	
	window.setInterval(function () {
	  if (playerPwr.innerHTML != player.pwr) playerPwr.innerHTML = player.pwr;
	  if (player.location == 'station' && player.pwr < player.maxPwr) {
	    player.pwr += 1;
	  }
	}, 1000);

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgYjczOTE3NjYzNmE5ZmRhZGExM2EiLCJ3ZWJwYWNrOi8vLy4vc2NyaXB0cy9tYWluLmpzIl0sIm5hbWVzIjpbInN0YXRpb25CdG4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic3RhdGlvbiIsInJlc2VhcmNoTGFiQnRuIiwicmVzZWFyY2hMYWIiLCJwbGF5ZXJQd3IiLCJwbGF5ZXJNYXhQd3IiLCJwbGF5ZXIiLCJwd3IiLCJtYXhQd3IiLCJsb2NhdGlvbiIsImFsbEhpZGRlbiIsImNsYXNzTGlzdCIsImFkZCIsInRyYXZlbCIsImRlc3RpbmF0aW9uIiwiaW5uZXJIVE1MIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZSIsIndpbmRvdyIsInNldEludGVydmFsIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7O0FDdENBLEtBQU1BLGFBQWFDLFNBQVNDLGNBQVQsQ0FBd0IsWUFBeEIsQ0FBbkI7QUFDQSxLQUFNQyxVQUFVRixTQUFTQyxjQUFULENBQXdCLFNBQXhCLENBQWhCO0FBQ0EsS0FBTUUsaUJBQWlCSCxTQUFTQyxjQUFULENBQXdCLGdCQUF4QixDQUF2QjtBQUNBLEtBQU1HLGNBQWNKLFNBQVNDLGNBQVQsQ0FBd0IsY0FBeEIsQ0FBcEI7QUFDQSxLQUFNSSxZQUFZTCxTQUFTQyxjQUFULENBQXdCLFdBQXhCLENBQWxCO0FBQ0EsS0FBTUssZUFBZU4sU0FBU0MsY0FBVCxDQUF3QixjQUF4QixDQUFyQjs7QUFFQSxLQUFJTSxTQUFTO0FBQ1pDLFFBQUssR0FETztBQUVaQyxXQUFRLEdBRkk7QUFHWkMsYUFBVTtBQUhFLEVBQWI7O0FBTUEsVUFBU0MsU0FBVCxHQUFxQjtBQUNuQlQsV0FBUVUsU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsUUFBdEI7QUFDQVQsZUFBWVEsU0FBWixDQUFzQkMsR0FBdEIsQ0FBMEIsUUFBMUI7QUFDRDs7QUFFRCxVQUFTQyxNQUFULENBQWdCQyxXQUFoQixFQUE2QjtBQUMzQixPQUFJUixPQUFPRyxRQUFQLElBQW1CSyxXQUFuQixJQUFrQ1IsT0FBT0MsR0FBUCxJQUFjLENBQXBELEVBQXVEO0FBQ3JERCxZQUFPRyxRQUFQLEdBQWtCSyxXQUFsQjtBQUNBUixZQUFPQyxHQUFQLElBQWMsQ0FBZDtBQUNBRztBQUNGLFNBQUlOLFVBQVVXLFNBQVYsSUFBdUJULE9BQU9DLEdBQWxDLEVBQXVDSCxVQUFVVyxTQUFWLEdBQXNCVCxPQUFPQyxHQUE3QjtBQUN0QztBQUNGOztBQUVEVCxZQUFXa0IsZ0JBQVgsQ0FBNEIsT0FBNUIsRUFBcUMsWUFBVztBQUM5Q0gsVUFBTyxTQUFQO0FBQ0FaLFdBQVFVLFNBQVIsQ0FBa0JNLE1BQWxCLENBQXlCLFFBQXpCO0FBQ0QsRUFIRDs7QUFLQWYsZ0JBQWVjLGdCQUFmLENBQWdDLE9BQWhDLEVBQXlDLFlBQVc7QUFDbERILFVBQU8sYUFBUDtBQUNBVixlQUFZUSxTQUFaLENBQXNCTSxNQUF0QixDQUE2QixRQUE3QjtBQUNELEVBSEQ7O0FBTUFDLFFBQU9DLFdBQVAsQ0FBbUIsWUFBVztBQUM1QixPQUFJZixVQUFVVyxTQUFWLElBQXVCVCxPQUFPQyxHQUFsQyxFQUF1Q0gsVUFBVVcsU0FBVixHQUFzQlQsT0FBT0MsR0FBN0I7QUFDdkMsT0FBSUQsT0FBT0csUUFBUCxJQUFtQixTQUFuQixJQUFnQ0gsT0FBT0MsR0FBUCxHQUFhRCxPQUFPRSxNQUF4RCxFQUFnRTtBQUM5REYsWUFBT0MsR0FBUCxJQUFjLENBQWQ7QUFDRDtBQUNGLEVBTEQsRUFLRyxJQUxILEUiLCJmaWxlIjoibWFpbi5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBiNzM5MTc2NjM2YTlmZGFkYTEzYSIsImNvbnN0IHN0YXRpb25CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3RhdGlvbkJ0bicpO1xuY29uc3Qgc3RhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGF0aW9uJyk7XG5jb25zdCByZXNlYXJjaExhYkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXNlYXJjaExhYkJ0bicpO1xuY29uc3QgcmVzZWFyY2hMYWIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZWFyY2gtbGFiJyk7XG5jb25zdCBwbGF5ZXJQd3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxheWVyUHdyJyk7XG5jb25zdCBwbGF5ZXJNYXhQd3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxheWVyTWF4UHdyJyk7XG5cbmxldCBwbGF5ZXIgPSB7XG4gcHdyOiAxMDAsXG4gbWF4UHdyOiAxMDAsXG4gbG9jYXRpb246ICdzdGF0aW9uJ1xufTtcblxuZnVuY3Rpb24gYWxsSGlkZGVuKCkge1xuICBzdGF0aW9uLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICByZXNlYXJjaExhYi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbn1cblxuZnVuY3Rpb24gdHJhdmVsKGRlc3RpbmF0aW9uKSB7XG4gIGlmIChwbGF5ZXIubG9jYXRpb24gIT0gZGVzdGluYXRpb24gJiYgcGxheWVyLnB3ciA+PSA1KSB7XG4gICAgcGxheWVyLmxvY2F0aW9uID0gZGVzdGluYXRpb247XG4gICAgcGxheWVyLnB3ciAtPSA1O1xuICAgIGFsbEhpZGRlbigpO1xuICBpZiAocGxheWVyUHdyLmlubmVySFRNTCAhPSBwbGF5ZXIucHdyKSBwbGF5ZXJQd3IuaW5uZXJIVE1MID0gcGxheWVyLnB3cjtcbiAgfVxufVxuXG5zdGF0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIHRyYXZlbCgnc3RhdGlvbicpO1xuICBzdGF0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xufSk7XG5cbnJlc2VhcmNoTGFiQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIHRyYXZlbCgncmVzZWFyY2hMYWInKTtcbiAgcmVzZWFyY2hMYWIuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG59KTtcblxuXG53aW5kb3cuc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gIGlmIChwbGF5ZXJQd3IuaW5uZXJIVE1MICE9IHBsYXllci5wd3IpIHBsYXllclB3ci5pbm5lckhUTUwgPSBwbGF5ZXIucHdyO1xuICBpZiAocGxheWVyLmxvY2F0aW9uID09ICdzdGF0aW9uJyAmJiBwbGF5ZXIucHdyIDwgcGxheWVyLm1heFB3cikge1xuICAgIHBsYXllci5wd3IgKz0gMTtcbiAgfVxufSwgMTAwMCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zY3JpcHRzL21haW4uanMiXSwic291cmNlUm9vdCI6IiJ9
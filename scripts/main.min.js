/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

	'use strict';
	
	var stationBtn = document.getElementById('stationBtn');
	var station = document.getElementById('station');
	var researchLabBtn = document.getElementById('researchLabBtn');
	var researchLab = document.getElementById('research-lab');
	var playerPwr = document.getElementById('playerPwr');
	var playerMaxPwr = document.getElementById('playerMaxPwr');
	var cargo = document.getElementById('cargo');
	
	var player = {
	  pwr: 100,
	  maxPwr: 100,
	  location: 'station',
	  tech: {},
	  cargo: {}
	};
	
	function allHidden() {
	  station.classList.add('hidden');
	  researchLab.classList.add('hidden');
	}
	
	function travel(destination) {
	  if (player.location != destination && player.pwr >= 5) {
	    player.location = destination;
	    player.pwr -= 5;
	    allHidden();
	    if (playerPwr.innerHTML != player.pwr) playerPwr.innerHTML = player.pwr;
	  }
	}
	
	stationBtn.addEventListener('click', function () {
	  travel('station');
	  station.classList.remove('hidden');
	});
	
	researchLabBtn.addEventListener('click', function () {
	  travel('researchLab');
	  researchLab.classList.remove('hidden');
	});
	
	cargo.addEventListener('click', function () {
	  console.log('');
	});
	
	window.setInterval(function () {
	  if (playerPwr.innerHTML != player.pwr) playerPwr.innerHTML = player.pwr;
	  if (player.location == 'station' && player.pwr < player.maxPwr) {
	    player.pwr += 1;
	  }
	}, 1000);

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgMDQwZDY4N2ExOGYyMGQ1NGVhN2QiLCJ3ZWJwYWNrOi8vLy4vc2NyaXB0cy9tYWluLmpzIl0sIm5hbWVzIjpbInN0YXRpb25CdG4iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwic3RhdGlvbiIsInJlc2VhcmNoTGFiQnRuIiwicmVzZWFyY2hMYWIiLCJwbGF5ZXJQd3IiLCJwbGF5ZXJNYXhQd3IiLCJjYXJnbyIsInBsYXllciIsInB3ciIsIm1heFB3ciIsImxvY2F0aW9uIiwidGVjaCIsImFsbEhpZGRlbiIsImNsYXNzTGlzdCIsImFkZCIsInRyYXZlbCIsImRlc3RpbmF0aW9uIiwiaW5uZXJIVE1MIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZSIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJzZXRJbnRlcnZhbCJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7OztBQ3RDQSxLQUFNQSxhQUFhQyxTQUFTQyxjQUFULENBQXdCLFlBQXhCLENBQW5CO0FBQ0EsS0FBTUMsVUFBVUYsU0FBU0MsY0FBVCxDQUF3QixTQUF4QixDQUFoQjtBQUNBLEtBQU1FLGlCQUFpQkgsU0FBU0MsY0FBVCxDQUF3QixnQkFBeEIsQ0FBdkI7QUFDQSxLQUFNRyxjQUFjSixTQUFTQyxjQUFULENBQXdCLGNBQXhCLENBQXBCO0FBQ0EsS0FBTUksWUFBWUwsU0FBU0MsY0FBVCxDQUF3QixXQUF4QixDQUFsQjtBQUNBLEtBQU1LLGVBQWVOLFNBQVNDLGNBQVQsQ0FBd0IsY0FBeEIsQ0FBckI7QUFDQSxLQUFNTSxRQUFRUCxTQUFTQyxjQUFULENBQXdCLE9BQXhCLENBQWQ7O0FBRUEsS0FBSU8sU0FBUztBQUNYQyxRQUFLLEdBRE07QUFFWEMsV0FBUSxHQUZHO0FBR1hDLGFBQVUsU0FIQztBQUlYQyxTQUFNLEVBSks7QUFLWEwsVUFBTztBQUxJLEVBQWI7O0FBUUEsVUFBU00sU0FBVCxHQUFxQjtBQUNuQlgsV0FBUVksU0FBUixDQUFrQkMsR0FBbEIsQ0FBc0IsUUFBdEI7QUFDQVgsZUFBWVUsU0FBWixDQUFzQkMsR0FBdEIsQ0FBMEIsUUFBMUI7QUFDRDs7QUFFRCxVQUFTQyxNQUFULENBQWdCQyxXQUFoQixFQUE2QjtBQUMzQixPQUFJVCxPQUFPRyxRQUFQLElBQW1CTSxXQUFuQixJQUFrQ1QsT0FBT0MsR0FBUCxJQUFjLENBQXBELEVBQXVEO0FBQ3JERCxZQUFPRyxRQUFQLEdBQWtCTSxXQUFsQjtBQUNBVCxZQUFPQyxHQUFQLElBQWMsQ0FBZDtBQUNBSTtBQUNGLFNBQUlSLFVBQVVhLFNBQVYsSUFBdUJWLE9BQU9DLEdBQWxDLEVBQXVDSixVQUFVYSxTQUFWLEdBQXNCVixPQUFPQyxHQUE3QjtBQUN0QztBQUNGOztBQUVEVixZQUFXb0IsZ0JBQVgsQ0FBNEIsT0FBNUIsRUFBcUMsWUFBVztBQUM5Q0gsVUFBTyxTQUFQO0FBQ0FkLFdBQVFZLFNBQVIsQ0FBa0JNLE1BQWxCLENBQXlCLFFBQXpCO0FBQ0QsRUFIRDs7QUFLQWpCLGdCQUFlZ0IsZ0JBQWYsQ0FBZ0MsT0FBaEMsRUFBeUMsWUFBVztBQUNsREgsVUFBTyxhQUFQO0FBQ0FaLGVBQVlVLFNBQVosQ0FBc0JNLE1BQXRCLENBQTZCLFFBQTdCO0FBQ0QsRUFIRDs7QUFLQWIsT0FBTVksZ0JBQU4sQ0FBdUIsT0FBdkIsRUFBZ0MsWUFBVztBQUN6Q0UsV0FBUUMsR0FBUixDQUFZLEVBQVo7QUFDRCxFQUZEOztBQUlBQyxRQUFPQyxXQUFQLENBQW1CLFlBQVc7QUFDNUIsT0FBSW5CLFVBQVVhLFNBQVYsSUFBdUJWLE9BQU9DLEdBQWxDLEVBQXVDSixVQUFVYSxTQUFWLEdBQXNCVixPQUFPQyxHQUE3QjtBQUN2QyxPQUFJRCxPQUFPRyxRQUFQLElBQW1CLFNBQW5CLElBQWdDSCxPQUFPQyxHQUFQLEdBQWFELE9BQU9FLE1BQXhELEVBQWdFO0FBQzlERixZQUFPQyxHQUFQLElBQWMsQ0FBZDtBQUNEO0FBQ0YsRUFMRCxFQUtHLElBTEgsRSIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuXG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRpZDogbW9kdWxlSWQsXG4gXHRcdFx0bG9hZGVkOiBmYWxzZVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2svYm9vdHN0cmFwIDA0MGQ2ODdhMThmMjBkNTRlYTdkIiwiY29uc3Qgc3RhdGlvbkJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGF0aW9uQnRuJyk7XG5jb25zdCBzdGF0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0YXRpb24nKTtcbmNvbnN0IHJlc2VhcmNoTGFiQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc2VhcmNoTGFiQnRuJyk7XG5jb25zdCByZXNlYXJjaExhYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXNlYXJjaC1sYWInKTtcbmNvbnN0IHBsYXllclB3ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXJQd3InKTtcbmNvbnN0IHBsYXllck1heFB3ciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXJNYXhQd3InKTtcbmNvbnN0IGNhcmdvID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhcmdvJyk7XG5cbmxldCBwbGF5ZXIgPSB7XG4gIHB3cjogMTAwLFxuICBtYXhQd3I6IDEwMCxcbiAgbG9jYXRpb246ICdzdGF0aW9uJyxcbiAgdGVjaDoge30sXG4gIGNhcmdvOiB7fVxufTtcblxuZnVuY3Rpb24gYWxsSGlkZGVuKCkge1xuICBzdGF0aW9uLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICByZXNlYXJjaExhYi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbn1cblxuZnVuY3Rpb24gdHJhdmVsKGRlc3RpbmF0aW9uKSB7XG4gIGlmIChwbGF5ZXIubG9jYXRpb24gIT0gZGVzdGluYXRpb24gJiYgcGxheWVyLnB3ciA+PSA1KSB7XG4gICAgcGxheWVyLmxvY2F0aW9uID0gZGVzdGluYXRpb247XG4gICAgcGxheWVyLnB3ciAtPSA1O1xuICAgIGFsbEhpZGRlbigpO1xuICBpZiAocGxheWVyUHdyLmlubmVySFRNTCAhPSBwbGF5ZXIucHdyKSBwbGF5ZXJQd3IuaW5uZXJIVE1MID0gcGxheWVyLnB3cjtcbiAgfVxufVxuXG5zdGF0aW9uQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIHRyYXZlbCgnc3RhdGlvbicpO1xuICBzdGF0aW9uLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xufSk7XG5cbnJlc2VhcmNoTGFiQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gIHRyYXZlbCgncmVzZWFyY2hMYWInKTtcbiAgcmVzZWFyY2hMYWIuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG59KTtcblxuY2FyZ28uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJycpXG59KTtcblxud2luZG93LnNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICBpZiAocGxheWVyUHdyLmlubmVySFRNTCAhPSBwbGF5ZXIucHdyKSBwbGF5ZXJQd3IuaW5uZXJIVE1MID0gcGxheWVyLnB3cjtcbiAgaWYgKHBsYXllci5sb2NhdGlvbiA9PSAnc3RhdGlvbicgJiYgcGxheWVyLnB3ciA8IHBsYXllci5tYXhQd3IpIHtcbiAgICBwbGF5ZXIucHdyICs9IDE7XG4gIH1cbn0sIDEwMDApO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc2NyaXB0cy9tYWluLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==